ORG 0
	MOV TMOD, #01H
	acall	CONFIGURE_LCD

KEYBOARD_LOOP:
	acall KEYBOARD
	;now, A has the key pressed
	
	ACALL CHECK_NOTE
	sjmp KEYBOARD_LOOP

CHECK_NOTE:
	CJNE A, #01111111B, OK
	LJMP RETURN
OK:	MOV B, #7
	DIV AB
	CJNE A, #0, CHECK1
	MOV A,B
	SJMP ROW0
CHECK1: CJNE A, #1, CHECK2
	MOV A,B
	LJMP ROW1 
CHECK2: CJNE A, #2, CHECK3
	MOV A,B
	LJMP ROW2
CHECK3: MOV A,B
	LJMP ROW3 

ROW0:	CJNE A, #0, CHECK01
	MOV R3,A
BACK00:	MOV TL0, #45H
	MOV TH0, #0FDH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #56H
	MOV TH0, #0FDH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE00		
	SJMP BACK00
HERE00:	LJMP CHECK_NOTE

CHECK01:CJNE A, #1, CHECK02
	MOV R3,A
BACK01:	MOV TL0, #6DH
	MOV TH0, #0FDH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #7EH
	MOV TH0, #0FDH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE01			
	SJMP BACK01
HERE01:	LJMP CHECK_NOTE

CHECK02:CJNE A, #2, CHECK03
	MOV R3,A
BACK02:	MOV TL0, #91H
	MOV TH0, #0FDH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0A2H
	MOV TH0, #0FDH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE02			
	SJMP BACK02
HERE02:	LJMP CHECK_NOTE

CHECK03:CJNE A, #3, CHECK04
	MOV R3,A
BACK03:	MOV TL0, #0B4H
	MOV TH0, #0FDH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0C5H
	MOV TH0, #0FDH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE03			
	SJMP BACK03
HERE03:	LJMP CHECK_NOTE

CHECK04:CJNE A, #4, CHECK05
	MOV R3,A
BACK04:	MOV TL0, #0D5H
	MOV TH0, #0FDH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0E6H
	MOV TH0, #0FDH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE04			
	SJMP BACK04
HERE04:	LJMP CHECK_NOTE

CHECK05:CJNE A, #5, CHECK06
	MOV R3,A
BACK05:	MOV TL0, #0F4H
	MOV TH0, #0FDH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #05H
	MOV TH0, #0FEH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE05			
	SJMP BACK05
HERE05:	LJMP CHECK_NOTE

CHECK06:MOV R3,A
BACK06:	MOV TL0, #12H
	MOV TH0, #0FEH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #23H
	MOV TH0, #0FEH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE06		
	SJMP BACK06
HERE06:	LJMP CHECK_NOTE


ROW1:
	CJNE A, #0, CHECK11
	MOV R3,A
BACK10:	MOV TL0, #0E9H
	MOV TH0, #0FBH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #03H
	MOV TH0, #0FCH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE10		
	SJMP BACK10
HERE10:	LJMP CHECK_NOTE

CHECK11:CJNE A, #1, CHECK12
	MOV R3,A
BACK11:	MOV TL0, #24H
	MOV TH0, #0FCH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #40H
	MOV TH0, #0FCH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE11		
	SJMP BACK11
HERE11:	LJMP CHECK_NOTE

CHECK12:CJNE A, #2, CHECK13
	MOV R3,A
BACK12:	MOV TL0, #5BH
	MOV TH0, #0FCH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #7AH
	MOV TH0, #0FCH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE12
	SJMP BACK12
HERE12:	LJMP CHECK_NOTE

CHECK13:CJNE A, #3, CHECK14
	MOV R3,A
BACK13:	MOV TL0, #8FH
	MOV TH0, #0FCH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0B4H
	MOV TH0, #0FCH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE13
	SJMP BACK13
HERE13:	LJMP CHECK_NOTE

CHECK14:CJNE A, #4, CHECK15
	MOV R3,A
BACK14:	MOV TL0, #0C1H
	MOV TH0, #0FCH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0E8H
	MOV TH0, #0FCH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE14
	SJMP BACK14
HERE14:	LJMP CHECK_NOTE

CHECK15:CJNE A, #5, CHECK16
	MOV R3,A
BACK15:	MOV TL0, #0F0H
	MOV TH0, #0FCH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #19H
	MOV TH0, #0FDH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE15
	SJMP BACK15
HERE15:	LJMP CHECK_NOTE

CHECK16:MOV R3,A
BACK16:	MOV TL0, #1CH
	MOV TH0, #0FDH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #45H
	MOV TH0, #0FDH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE16
	SJMP BACK16
HERE16:	LJMP CHECK_NOTE


ROW2:
	CJNE A, #0, CHECK21
	MOV R3,A
BACK20:	MOV TL0, #0DFH
	MOV TH0, #0F9H
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0F0H
	MOV TH0, #0F9H
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE20
	SJMP BACK20
HERE20:	LJMP CHECK_NOTE

CHECK21:CJNE A, #1, CHECK22
	MOV R3,A
BACK21:	MOV TL0, #37H
	MOV TH0, #0FAH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #48H
	MOV TH0, #0FAH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE21	
	SJMP BACK21
HERE21:	LJMP CHECK_NOTE

CHECK22:CJNE A, #2, CHECK23
	MOV R3,A
BACK22:	MOV TL0, #8AH
	MOV TH0, #0FAH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0A1H
	MOV TH0, #0FAH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE22
	SJMP BACK22
HERE22:	LJMP CHECK_NOTE

CHECK23:CJNE A, #3, CHECK24
	MOV R3,A
BACK23:	MOV TL0, #0D9H
	MOV TH0, #0FAH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0EAH
	MOV TH0, #0FAH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE23
	SJMP BACK23
HERE23:	LJMP CHECK_NOTE

CHECK24:CJNE A, #4, CHECK25
	MOV R3,A
BACK24:	MOV TL0, #23H
	MOV TH0, #0FBH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #34H
	MOV TH0, #0FBH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE24
	SJMP BACK24
HERE24:	LJMP CHECK_NOTE

CHECK25:CJNE A, #5, CHECK26
	MOV R3,A
BACK25:	MOV TL0, #69H
	MOV TH0, #0FBH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #88H
	MOV TH0, #0FBH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE25
	SJMP BACK25
HERE25:	LJMP CHECK_NOTE

CHECK26:MOV R3,A
BACK26:	MOV TL0, #0ABH
	MOV TH0, #0FBH
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0CBH
	MOV TH0, #0FBH
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE26
	SJMP BACK26
HERE26:	LJMP CHECK_NOTE


ROW3:	CJNE A, #0, CHECK31
	MOV R3,A
BACK30:	MOV TL0, #0D2H
	MOV TH0, #0F6H
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0E3H
	MOV TH0, #0F6H
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE30
	SJMP BACK30
HERE30:	LJMP CHECK_NOTE

CHECK31:CJNE A, #1, CHECK32
	MOV R3,A
BACK31:	MOV TL0, #5CH
	MOV TH0, #0F7H
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #6DH
	MOV TH0, #0F7H
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE31
	SJMP BACK31
HERE31:	LJMP CHECK_NOTE

CHECK32:CJNE A, #2, CHECK33
	MOV R3,A
BACK32:	MOV TL0, #0D2H
	MOV TH0, #0F7H
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0E3H
	MOV TH0, #0F7H
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE32
	SJMP BACK32
HERE32:	LJMP CHECK_NOTE

CHECK33:CJNE A, #3, CHECK34
	MOV R3,A
BACK33:	MOV TL0, #47H
	MOV TH0, #0F8H
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #58H
	MOV TH0, #0F8H
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE33
	SJMP BACK33
HERE33:	LJMP CHECK_NOTE

CHECK34:CJNE A, #4, CHECK35
	MOV R3,A
BACK34:	MOV TL0, #0B6H
	MOV TH0, #0F8H
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #0C7H
	MOV TH0, #0F8H
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0	
	CJNE A, 3, HERE34
	SJMP BACK34
HERE34:	LJMP CHECK_NOTE

CHECK35:CJNE A, #5, CHECK36
	MOV R3,A
BACK35:	MOV TL0, #1EH
	MOV TH0, #0F9H
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #2FH
	MOV TH0, #0F9H
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE35
	SJMP BACK35
HERE35:	LJMP CHECK_NOTE

CHECK36:MOV R3,A
BACK36:	MOV TL0, #85H
	MOV TH0, #0F9H
	SETB P3.0
	SETB TR0
	JNB TF0, $
	CLR P3.0
	CLR TR0
	CLR TF0
	MOV TL0, #96H
	MOV TH0, #0F9H
	SETB TR0
	ACALL keyboard
	JNB TF0, $
	CLR TR0
	CLR TF0
	CJNE A, 3, HERE36
	SJMP BACK36
HERE36:	LJMP CHECK_NOTE



RETURN:	RET



	
CONFIGURE_LCD:	;THIS SUBROUTINE SENDS THE INITIALIZATION COMMANDS TO THE LCD
	mov a,#38H	;TWO LINES, 5X7 MATRIX
	acall SEND_COMMAND
	mov a,#0FH	;DISPLAY ON, CURSOR BLINKING
	acall SEND_COMMAND
	mov a,#06H	;INCREMENT CURSOR (SHIFT CURSOR TO RIGHT)
	acall SEND_COMMAND
	mov a,#01H	;CLEAR DISPLAY SCREEN
	acall SEND_COMMAND
	mov a,#80H	;FORCE CURSOR TO BEGINNING OF THE FIRST LINE
	acall SEND_COMMAND
	ret



SEND_COMMAND:
	mov p2,a		;THE COMMAND IS STORED IN A, SEND IT TO LCD
	clr p3.5		;RS=0 BEFORE SENDING COMMAND
	clr p3.6		;R/W=0 TO WRITE
	setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
	acall DELAY
	clr p3.7
	ret


SEND_DATA:
	mov p2,a		;SEND THE DATA STORED IN A TO LCD
	setb p3.5	;RS=1 BEFORE SENDING DATA
	clr p3.6		;R/W=0 TO WRITE
	setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
	acall DELAY
	clr p3.7
	ret


DELAY:
	push 0
	push 1
	mov r0,#50
DELAY_OUTER_LOOP:
	mov r1,#255
	djnz r1,$
	djnz r0,DELAY_OUTER_LOOP
	pop 1
	pop 0
	ret


KEYBOARD: ;takes the key pressed from the keyboard and puts it to A
	mov	P0, #0ffh	;makes P0 input

KB_OVER1:
	mov	P1, #11111110B
	mov	A, P0
	anl	A, #01111111B
	cjne	A, #01111111B, ROW_0
	mov	P1, #11111101B
	mov	A, P0
	anl	A, #01111111B
	cjne	A, #01111111B, ROW_1
	mov	P1, #11111011B
	mov	A, P0
	anl	A, #01111111B
	cjne	A, #01111111B, ROW_2
	mov	P1, #11110111B
	mov	A, P0
	anl	A, #01111111B
	cjne	A, #01111111B, ROW_3
	ljmp	retur
	
ROW_0:
	MOV R2, #00
	sjmp	KB_FIND
ROW_1:
	MOV R2, #7
	sjmp	KB_FIND
ROW_2:
	MOV R2, #14
	sjmp	KB_FIND
ROW_3:
	MOV R2, #21
KB_FIND:
	RL	A
	JNB ACC.7,KB_MATCH
	inc	R2
	sjmp	KB_FIND
KB_MATCH:
	MOV A,R2
retur:	ret


END


